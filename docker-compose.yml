version: '3.8'

services:
  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: infinity-angles-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/infinity-angles
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-here
      - BCRYPT_ROUNDS=12
    depends_on:
      - mongo
      - redis
    networks:
      - infinity-network
    volumes:
      - uploads:/app/uploads
      - logs:/app/logs
    restart: unless-stopped

  # MongoDB Database
  mongo:
    image: mongo:6.0
    container_name: infinity-angles-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=infinity-angles
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - infinity-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: infinity-angles-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis_data:/data
    networks:
      - infinity-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: infinity-angles-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - static_files:/usr/share/nginx/html
    depends_on:
      - api
    networks:
      - infinity-network
    restart: unless-stopped

networks:
  infinity-network:
    driver: bridge

volumes:
  mongo_data:
  redis_data:
  uploads:
  logs:
  static_files:
